generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appointment {
  id                                String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date_time                         DateTime @db.Timestamp(6)
  patient_id                        String?  @db.Uuid
  doctor_id                         String?  @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  user_appointment_doctor_idTouser  user?    @relation("appointment_doctor_idTouser", fields: [doctor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_appointment_patient_idTouser user?    @relation("appointment_patient_idTouser", fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model blog {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String    @db.VarChar(255)
  content     String
  hospital_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  hospital    hospital? @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model gallery {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  image       String    @db.VarChar(255)
  caption     String?   @db.VarChar(255)
  hospital_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  hospital    hospital? @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hospital {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  blog         blog[]
  gallery      gallery[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  social_media social_media[]
}

model social_media {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  platform    String    @db.VarChar(255)
  link        String    @db.VarChar(255)
  hospital_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  hospital    hospital? @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                       String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                    String        @unique @db.VarChar(255)
  firstName                                String?       @db.VarChar(255)
  lastName                                 String?       @db.VarChar(255)
  roq_user_id                              String        @db.VarChar(255)
  tenant_id                                String        @db.VarChar(255)
  created_at                               DateTime      @default(now()) @db.Timestamp(6)
  updated_at                               DateTime      @default(now()) @db.Timestamp(6)
  appointment_appointment_doctor_idTouser  appointment[] @relation("appointment_doctor_idTouser")
  appointment_appointment_patient_idTouser appointment[] @relation("appointment_patient_idTouser")
  hospital                                 hospital[]
}
